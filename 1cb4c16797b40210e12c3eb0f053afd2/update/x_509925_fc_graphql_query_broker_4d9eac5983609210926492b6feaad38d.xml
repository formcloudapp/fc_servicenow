<?xml version="1.0" encoding="UTF-8"?><record_update table="x_509925_fc_graphql_query_broker">
    <x_509925_fc_graphql_query_broker action="INSERT_OR_UPDATE">
        <ai_filter>false</ai_filter>
        <allow_selection>false</allow_selection>
        <base>false</base>
        <columns_configs>[]</columns_configs>
        <filter_builder><![CDATA[((current, params) => {

    return '';

})(current, params);]]></filter_builder>
        <filters/>
        <gql><![CDATA[function execute(params, configs) {
    let gql = '';
    if (configs.schema == 'ootb') {
        gql = `
		{
			GlideRecord_Query{
				${configs.table}(queryConditions: "${configs.filters}", pagination: { offset: ${configs.offset}, limit: ${configs.limit} }) {
					_rowCount
					_results ${configs.gql}
				}
			}
		}
	`;
    }else{
		gql = `
		{
			${configs.namespace}{
				${configs.gql_schema}{
					getMultiple(tableName: "${configs.table}", queryConditions: "${configs.filters}", pagination: { offset: ${configs.offset}, limit: ${configs.limit} })
					{
						sys_id{
							value
						}
						...on ${configs.namespace}_${configs.gql_schema}_${configs.table}  ${configs.gql}
					}
					getCount(tableName: "${configs.table}", queryConditions: "${configs.filters}")
				}
			}
		}
		`;
	}

    return gql;
}]]></gql>
        <gql_path/>
        <graphql_schema display_value="Task">286bea0983e45210926492b6feaad396</graphql_schema>
        <metadata>{}</metadata>
        <name>group_tasks</name>
        <number>GQL0001010</number>
        <record_details/>
        <record_script><![CDATA[function execute(record, service) {

    return {
        record: record
    }
}]]></record_script>
        <row_count_path/>
        <schema>custom</schema>
        <script><![CDATA[((current, params) => {
	const namespace = gs.getProperty(current.sys_scope.scope + '.graphql_namespace');
	const gqlSchemaGr = current.graphql_schema.getRefRecord();
    let datatableConfig = {
        table: current.getValue('table'),
        filters: current.getValue('filters'),
        allow_selection: current.getValue('allow_selection'),
        gql: current.getValue('gql'),
        details_template: current.getValue('record_details'),
		gql_path: current.getValue('schema') == 'ootb' ? ('GlideRecord_Query.' + current.getValue('table') + '._results') : (namespace + '.' + gqlSchemaGr.getValue('namespace')+ '.getMultiple'),
        row_count_path: current.getValue('schema') == 'ootb' ? ('GlideRecord_Query.' + current.getValue('table') + '._rowCount') : (namespace + '.' + gqlSchemaGr.getValue('namespace')+ '.getCount'),
        data_columns: JSON.parse(current.getValue('columns_configs')),
		schema: current.getValue('schema'),
		gql_schema: gqlSchemaGr.getValue('namespace')
    };

    return datatableConfig;

})(current, params);]]></script>
        <sys_class_name>x_509925_fc_graphql_query_broker</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-08 21:46:08</sys_created_on>
        <sys_id>4d9eac5983609210926492b6feaad38d</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>group_tasks</sys_name>
        <sys_package display_value="FC" source="x_509925_fc">1cb4c16797b40210e12c3eb0f053afd2</sys_package>
        <sys_policy/>
        <sys_scope display_value="FC">1cb4c16797b40210e12c3eb0f053afd2</sys_scope>
        <sys_update_name>x_509925_fc_graphql_query_broker_4d9eac5983609210926492b6feaad38d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-17 05:48:54</sys_updated_on>
        <table>task</table>
    </x_509925_fc_graphql_query_broker>
</record_update>
