<?xml version="1.0" encoding="UTF-8"?><record_update>
    <sys_dictionary action="INSERT_OR_UPDATE" element="script" table="x_509925_fc_graphql_query_broker">
        <active>true</active>
        <array>false</array>
        <attributes>edge_encryption_enabled=true</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label>Script</column_label>
        <comments/>
        <create_roles/>
        <default_value>((current, params) =&gt; {&#13;
	const namespace = gs.getProperty(current.sys_scope.scope + '.graphql_namespace');&#13;
	const gqlSchemaGr = current.graphql_schema.getRefRecord();&#13;
    let datatableConfig = {&#13;
        table: current.getValue('table'),&#13;
        filters: current.getValue('filters'),&#13;
        allow_selection: current.getValue('allow_selection'),&#13;
        gql: current.getValue('gql'),&#13;
        details_template: current.getValue('record_details'),&#13;
		gql_path: current.getValue('schema') == 'ootb' ? ('GlideRecord_Query.' + current.getValue('table') + '._results') : (namespace + '.' + gqlSchemaGr.getValue('namespace')+ '.getMultiple'),&#13;
        row_count_path: current.getValue('schema') == 'ootb' ? ('GlideRecord_Query.' + current.getValue('table') + '._rowCount') : (namespace + '.' + gqlSchemaGr.getValue('namespace')+ '.getCount'),&#13;
        data_columns: JSON.parse(current.getValue('columns_configs')),&#13;
		schema: current.getValue('schema'),&#13;
		gql_schema: gqlSchemaGr.getValue('namespace')&#13;
    };&#13;
&#13;
    return datatableConfig;&#13;
&#13;
})(current, params);</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>script</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <formula/>
        <function_definition/>
        <function_field>false</function_field>
        <internal_type display_value="Script">script</internal_type>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <name>x_509925_fc_graphql_query_broker</name>
        <next_element/>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_dictionary</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-20 00:05:07</sys_created_on>
        <sys_id>3ca0a55ec31a12105214f90ed401312a</sys_id>
        <sys_name>Script</sys_name>
        <sys_package display_value="FC" source="x_509925_fc">1cb4c16797b40210e12c3eb0f053afd2</sys_package>
        <sys_policy/>
        <sys_scope display_value="FC">1cb4c16797b40210e12c3eb0f053afd2</sys_scope>
        <sys_update_name>sys_dictionary_x_509925_fc_graphql_query_broker_script</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-17 05:46:12</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <virtual_type>script</virtual_type>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_dictionary>
</record_update>
